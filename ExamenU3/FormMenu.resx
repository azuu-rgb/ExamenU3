<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        r83/A7/pXPfxclrPAAAAAElFTkSuQmCC
</value>
  </data>
</root>